<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Search Frontend</title>
  <link href = "styles.css" rel = "stylesheet">
  <script src="script.js"></script>
</head>
<body class="p-8 font-sans">
  <h1 class="text-2xl font-bold mb-4">üîé Search and Recommmend</h1>
  <input id="keyword" type="text" placeholder="Enter keyword..." class="border p-2 mr-2">
  <button onclick="search()" class="bg-blue-500 text-white p-2 rounded">Search</button>
  <pre id="results" class="mt-4 p-4 bg-gray-100"></pre>
  <div class="product-container">
    <div class="product-image">
      <img src="main-product.jpg" alt="S·∫£n ph·∫©m ch√≠nh">
    </div>
    <div class="product-info">
      <h1 class="product-title">T√™n s·∫£n ph·∫©m</h1>
      <p class="product-description">M√¥ t·∫£ chi ti·∫øt v·ªÅ s·∫£n ph·∫©m, ch·∫•t li·ªáu, xu·∫•t x·ª©, gi√° c·∫£...</p>
    </div>
  </div>>
  <h2 class="section-title">S·∫£n ph·∫©m t∆∞∆°ng t·ª±</h2>
  <div class="related-products">
    <div class="related-product">
      <img src="related1.jpg" alt="S·∫£n ph·∫©m 1">
      <p class="related-title">S·∫£n ph·∫©m 1</p>
    </div>
    <div class="related-product">
      <img src="related2.jpg" alt="S·∫£n ph·∫©m 2">
      <p class="related-title">S·∫£n ph·∫©m 2</p>
    </div>
    <div class="related-product">
      <img src="related3.jpg" alt="S·∫£n ph·∫©m 3">
      <p class="related-title">S·∫£n ph·∫©m 3</p>
    </div>
    <div class="related-product">
      <img src="related4.jpg" alt="S·∫£n ph·∫©m 4">
      <p class="related-title">S·∫£n ph·∫©m 4</p>
    </div>
    <div class="related-product">
      <img src="related5.jpg" alt="S·∫£n ph·∫©m 5">
      <p class="related-title">S·∫£n ph·∫©m 5</p>
    </div>
  </div>
</body>
</html>

script

// script.js
const API_BASE_URL = "http://localhost:5000"; // ƒê·ªãa ch·ªâ backend API

// 1. T·∫£i v√† hi·ªÉn th·ªã c√°c s·∫£n ph·∫©m ban ƒë·∫ßu khi trang ƒë∆∞·ª£c load
async function loadInitialProducts() {
  const productListTitle = document.getElementById('productListTitle');
  const recommendationsContainer = document.getElementById('recommendationsContainer');
  const recommendationsTitle = document.getElementById('recommendationsTitle');

  if (productListTitle) productListTitle.innerText = "Featured Products:";
  if (recommendationsContainer) recommendationsContainer.innerHTML = ''; // X√≥a g·ª£i √Ω c≈©
  if (recommendationsTitle) recommendationsTitle.style.display = 'none'; // ·∫®n ti√™u ƒë·ªÅ g·ª£i √Ω

  try {
    const response = await fetch(`${API_BASE_URL}/products?limit=10`); // G·ªçi API /products
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
    const products = await response.json();
    renderProducts(products, 'productListContainer', false); // false = kh√¥ng ph·∫£i danh s√°ch g·ª£i √Ω
  } catch (error) {
    console.error("Error loading initial products:", error);
    const container = document.getElementById('productListContainer');
    if (container) container.innerHTML = "<p class='col-span-full text-center text-red-500'>Error loading products.</p>";
  }
}

// 2. T√¨m ki·∫øm s·∫£n ph·∫©m theo keyword
async function searchProductsAPI() {
  const keyword = document.getElementById("keyword").value;
  const productListTitle = document.getElementById('productListTitle');
  const recommendationsContainer = document.getElementById('recommendationsContainer');
  const recommendationsTitle = document.getElementById('recommendationsTitle');

  if (productListTitle) productListTitle.innerText = `Search Results for: "${keyword}"`;
  if (recommendationsContainer) recommendationsContainer.innerHTML = ''; // X√≥a g·ª£i √Ω c≈©
  if (recommendationsTitle) recommendationsTitle.style.display = 'none'; // ·∫®n ti√™u ƒë·ªÅ g·ª£i √Ω

  const productListContainer = document.getElementById('productListContainer');
  if (!productListContainer) return;

  if (!keyword.trim()) {
    productListContainer.innerHTML = "<p class='col-span-full text-center'>Please enter a keyword to search.</p>";
    return;
  }

  try {
    productListContainer.innerHTML = '<p class="col-span-full text-center">Searching...</p>';
    const response = await fetch(`${API_BASE_URL}/search?keyword=${encodeURIComponent(keyword)}`);
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
    const data = await response.json();
    renderProducts(data, 'productListContainer', false);
  } catch (error) {
    console.error("Error searching products:", error);
    productListContainer.innerHTML = "<p class='col-span-full text-center text-red-500'>Error searching products.</p>";
  }
}

// 3. D·ª±ng (render) HTML cho danh s√°ch s·∫£n ph·∫©m
function renderProducts(items, containerId, isRecommendationList) {
  const container = document.getElementById(containerId);
  if (!container) {
    console.error(`Container with id '${containerId}' not found!`);
    return;
  }
  container.innerHTML = ''; // X√≥a n·ªôi dung c≈©

  if (!Array.isArray(items) || items.length === 0) {
    const message = isRecommendationList ? 'No similar products found.' : 'No products found for your query.';
    container.innerHTML = `<p class="col-span-full text-center text-gray-500">${message}</p>`;
    return;
  }

  items.forEach(product => {
    const productDiv = document.createElement('div');
    productDiv.className = 'border rounded-lg p-3 shadow-md hover:shadow-xl transition-shadow duration-300 ease-in-out cursor-pointer flex flex-col items-center text-center';

    // Backend app.py c·ªßa b·∫°n tr·∫£ v·ªÅ c√°c tr∆∞·ªùng:
    // - T·ª´ /products v√† /search: { product_id (l√† ASIN), name (l√† title), price (l√† final_price), image_url }
    // - T·ª´ /recommend: [{ recommended_asin, name, price, image_url, similarity }, ...]

    const asinToRecommend = isRecommendationList ? product.recommended_asin : product.product_id;
    const displayName = product.name || "N/A";
    const displayImageUrl = product.image_url || 'https://via.placeholder.com/150?text=No+Image'; // Placeholder
    const displayPrice = product.price ? `${product.price.toLocaleString('vi-VN')} VND` : '';
    const displaySimilarity = isRecommendationList && typeof product.similarity === 'number' ? `Similarity: ${product.similarity.toFixed(4)}` : '';

    productDiv.innerHTML = `
      <img src="${displayImageUrl}" alt="${displayName}" class="w-32 h-32 object-contain mb-2 rounded">
      <h3 class="font-semibold text-sm mt-1 h-10 overflow-hidden" title="${displayName}">${displayName}</h3>
      ${displayPrice ? `<p class="text-sm font-bold text-red-600 mt-1">${displayPrice}</p>` : ''}
      ${displaySimilarity ? `<p class="text-xs text-blue-500 mt-1">${displaySimilarity}</p>` : ''}
    `;

    if (asinToRecommend) {
      productDiv.onclick = () => showRecommendationsAPI(asinToRecommend);
    }
    container.appendChild(productDiv);
  });
}

// 4. G·ªçi API recommend v√† hi·ªÉn th·ªã k·∫øt qu·∫£
async function showRecommendationsAPI(asin) {
  const recommendationsContainer = document.getElementById('recommendationsContainer');
  const recommendationsTitle = document.getElementById('recommendationsTitle');

  if (!asin) {
    console.error("ASIN is undefined, cannot fetch recommendations.");
    if (recommendationsContainer) recommendationsContainer.innerHTML = "<p class='col-span-full text-center text-red-500'>Cannot fetch recommendations: Product ID is missing.</p>";
    return;
  }

  if (recommendationsTitle) recommendationsTitle.style.display = 'block';
  if (recommendationsContainer) recommendationsContainer.innerHTML = '<p class="col-span-full text-center">Loading recommendations...</p>';

  try {
    const response = await fetch(`${API_BASE_URL}/recommend/${asin}`);
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
    const recommendedItems = await response.json();
    renderProducts(recommendedItems, 'recommendationsContainer', true); // true = ƒë√¢y l√† danh s√°ch g·ª£i √Ω
  } catch (error)
{
    console.error(`Error fetching recommendations for ${asin}:`, error);
    if (recommendationsContainer) recommendationsContainer.innerHTML = "<p class='col-span-full text-center text-red-500'>Error loading recommendations.</p>";
  }
}

// Khi trang t·∫£i, g·ªçi ƒë·ªÉ hi·ªÉn th·ªã s·∫£n ph·∫©m ban ƒë·∫ßu
window.onload = loadInitialProducts;

css

body {
    font-family: Arial, sans-serif;
    margin: 20px;
    padding: 0;
    background-color: #f9f9f9;
  }
  
  .product-container {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 40px;
    gap: 20px;
  }
  
  .product-info {
    flex: 1;
  }
  
  .product-title {
    font-size: 28px;
    margin-bottom: 10px;
  }
  
  .product-description {
    font-size: 16px;
    color: #555;
  }
  
  .product-image img {
    max-width: 400px;
    height: auto;
    border-radius: 8px;
  }
  
  .section-title {
    font-size: 22px;
    margin-bottom: 20px;
  }
  
  .related-products {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 10px;
  }
  
  .related-product {
    width: 18%;
    text-align: center;
    background: #fff;
    padding: 10px;
    border-radius: 8px;
    box-shadow: 0 0 5px rgba(0,0,0,0.1);
  }
  
  .related-product img {
    width: 100%;
    height: auto;
    border-radius: 5px;
  }
  
  .related-title {
    margin-top: 8px;
    font-size: 14px;
    color: #333;
  }
  